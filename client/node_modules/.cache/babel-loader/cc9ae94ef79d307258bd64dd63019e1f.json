{"ast":null,"code":"import { takeEvery, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from \"./user.actions\";\nimport { auth, googleProvider, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nexport function* googleSignIn() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider); // отримуємо юзера з фаєрбейзового метода\n\n    const userRef = yield call(createUserProfileDocument, user); // створюємо юзер-референс з допомогою функції, яку ми створили в утілітах фаєрбезу\n\n    const userSnapshot = yield userRef.get(); // беремо снепшот юзера з цього юзер-референса\n\n    yield put(googleSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }) // поміщаємо айді та інші дані юзера в редюсер. з допомогою екшена\n    );\n  } catch (error) {\n    yield put(googleSignInFailure({\n      error: error\n    })); // виводимо і поміщаємо в редюсер помилку\n  }\n}\nexport function* emailSignIn({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user); // створюємо юзер-референс з допомогою функції, яку ми створили в утілітах фаєрбезу\n\n    const userSnapshot = yield userRef.get(); // беремо снепшот юзера з цього юзер-референса\n\n    yield put(emailSignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }) // поміщаємо айді та інші дані юзера в редюсер. з допомогою екшена\n    );\n  } catch (error) {\n    yield put(emailSignInFailure({\n      error: error\n    }));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeEvery(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\nexport function* onEmailSignInStart() {\n  yield takeEvery(UserActionTypes.GOOGLE_SIGN_IN_START, emailSignIn);\n}\nexport default function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/Users/Andrew_AJ/Documents/REPO/ReactCourse2021/covercam/src/redux/user/user.sagas.js"],"names":["takeEvery","put","all","call","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","auth","googleProvider","createUserProfileDocument","googleSignIn","user","signInWithPopup","userRef","userSnapshot","get","id","data","error","emailSignIn","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","userSagas"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,gBALP;AAOA,SACEC,IADF,EAEEC,cAFF,EAGEC,yBAHF,QAIO,+BAJP;AAMA,OAAO,UAAUC,YAAV,GAAyB;AAC9B,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACK,eAAL,CAAqBJ,cAArB,CAAvB,CADE,CAC2D;;AAC7D,UAAMK,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B,CAFE,CAE2D;;AAC7D,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B,CAHE,CAGwC;;AAC1C,UAAMhB,GAAG,CACPI,mBAAmB,CAAC;AAAEa,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADZ,CAC8D;AAD9D,KAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACK,mBAAmB,CAAC;AAAEc,MAAAA,KAAK,EAAEA;AAAT,KAAD,CAApB,CAAT,CADc,CACoC;AACnD;AACF;AAED,OAAO,UAAUC,WAAV,CAAsB;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAAtB,EAAwD;AAC7D,MAAI;AACF,UAAM;AAAEX,MAAAA;AAAF,QAAW,MAAMJ,IAAI,CAACgB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAAvB;AACA,UAAMT,OAAO,GAAG,MAAMZ,IAAI,CAACQ,yBAAD,EAA4BE,IAA5B,CAA1B,CAFE,CAE2D;;AAC7D,UAAMG,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B,CAHE,CAGwC;;AAC1C,UAAMhB,GAAG,CACPM,kBAAkB,CAAC;AAAEW,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAnB;AAAuB,SAAGF,YAAY,CAACG,IAAb;AAA1B,KAAD,CADX,CAC6D;AAD7D,KAAT;AAGD,GAPD,CAOE,OAAOC,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACO,kBAAkB,CAAC;AAAEY,MAAAA,KAAK,EAAEA;AAAT,KAAD,CAAnB,CAAT;AACD;AACF;AAED,OAAO,UAAUM,mBAAV,GAAgC;AACrC,QAAM1B,SAAS,CAACI,eAAe,CAACuB,oBAAjB,EAAuCf,YAAvC,CAAf;AACD;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AACpC,QAAM5B,SAAS,CAACI,eAAe,CAACuB,oBAAjB,EAAuCN,WAAvC,CAAf;AACD;AAED,eAAe,UAAUQ,SAAV,GAAsB;AACnC,QAAM3B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeEvery, put, all, call } from \"redux-saga/effects\";\nimport UserActionTypes from \"./user.types\";\nimport {\n  googleSignInSuccess,\n  googleSignInFailure,\n  emailSignInSuccess,\n  emailSignInFailure,\n} from \"./user.actions\";\n\nimport {\n  auth,\n  googleProvider,\n  createUserProfileDocument,\n} from \"../../firebase/firebase.utils\";\n\nexport function* googleSignIn() {\n  try {\n    const { user } = yield auth.signInWithPopup(googleProvider); // отримуємо юзера з фаєрбейзового метода\n    const userRef = yield call(createUserProfileDocument, user); // створюємо юзер-референс з допомогою функції, яку ми створили в утілітах фаєрбезу\n    const userSnapshot = yield userRef.get(); // беремо снепшот юзера з цього юзер-референса\n    yield put(\n      googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }) // поміщаємо айді та інші дані юзера в редюсер. з допомогою екшена\n    );\n  } catch (error) {\n    yield put(googleSignInFailure({ error: error })); // виводимо і поміщаємо в редюсер помилку\n  }\n}\n\nexport function* emailSignIn({ payload: { email, password } }) {\n  try {\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user); // створюємо юзер-референс з допомогою функції, яку ми створили в утілітах фаєрбезу\n    const userSnapshot = yield userRef.get(); // беремо снепшот юзера з цього юзер-референса\n    yield put(\n      emailSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }) // поміщаємо айді та інші дані юзера в редюсер. з допомогою екшена\n    );\n  } catch (error) {\n    yield put(emailSignInFailure({ error: error }));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeEvery(UserActionTypes.GOOGLE_SIGN_IN_START, googleSignIn);\n}\n\nexport function* onEmailSignInStart() {\n  yield takeEvery(UserActionTypes.GOOGLE_SIGN_IN_START, emailSignIn);\n}\n\nexport default function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}
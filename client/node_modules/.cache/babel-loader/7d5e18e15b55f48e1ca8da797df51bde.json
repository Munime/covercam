{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nconst config = {\n  apiKey: \"AIzaSyDQAQmqIePcpquH-ZY2Saee7NrRxRdgZyI\",\n  authDomain: \"camcover-8f344.firebaseapp.com\",\n  projectId: \"camcover-8f344\",\n  storageBucket: \"camcover-8f344.appspot.com\",\n  messagingSenderId: \"426448216056\",\n  appId: \"1:426448216056:web:d6e5c46c67aa5db351400d\"\n}; // функція створює новий документ у Firebase колекції users\n// userAuth - це обєкт, який нам прилетів після того як юзер верифікувався через Google\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get(); // snapshot просто представляє, показує Дані\n  // створюємо документ в колекції, поміщаючи туди дані\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth; // ці дані ми берем з обєкта, який прилетів, коли юзер верифікувався\n\n    const createdAt = new Date(); // час коли документ створено\n\n    try {\n      await userRef.set({\n        // .set() метод відповідає за створення\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/Andrew_AJ/Documents/REPO/ReactCourse2021/covercam/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,MAAM,EAAE,yCADK;AAEbC,EAAAA,UAAU,EAAE,gCAFC;AAGbC,EAAAA,SAAS,EAAE,gBAHE;AAIbC,EAAAA,aAAa,EAAE,4BAJF;AAKbC,EAAAA,iBAAiB,EAAE,cALN;AAMbC,EAAAA,KAAK,EAAE;AANM,CAAf,C,CASA;AACA;;AACA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB,CAJ2E,CAIrC;AAEtC;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B,CADoB,CACqB;;AACzC,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB,CAFoB,CAEU;;AAC9B,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChB;AACAJ,QAAAA,WAFgB;AAGhBC,QAAAA,KAHgB;AAIhBC,QAAAA,SAJgB;AAKhB,WAAGV;AALa,OAAZ,CAAN;AAOD,KARD,CAQE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;AACF,CAtBM;AAwBP1B,QAAQ,CAAC2B,aAAT,CAAuB1B,MAAvB;AAEA,OAAO,MAAM2B,IAAI,GAAG5B,QAAQ,CAAC4B,IAAT,EAAb;AACP,OAAO,MAAMhB,SAAS,GAAGZ,QAAQ,CAACY,SAAT,EAAlB;AAEP,MAAMiB,QAAQ,GAAG,IAAI7B,QAAQ,CAAC4B,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAe7B,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyDQAQmqIePcpquH-ZY2Saee7NrRxRdgZyI\",\n  authDomain: \"camcover-8f344.firebaseapp.com\",\n  projectId: \"camcover-8f344\",\n  storageBucket: \"camcover-8f344.appspot.com\",\n  messagingSenderId: \"426448216056\",\n  appId: \"1:426448216056:web:d6e5c46c67aa5db351400d\",\n};\n\n// функція створює новий документ у Firebase колекції users\n// userAuth - це обєкт, який нам прилетів після того як юзер верифікувався через Google\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get(); // snapshot просто представляє, показує Дані\n\n  // створюємо документ в колекції, поміщаючи туди дані\n  if (!snapShot.exists) {\n    const { displayName, email } = userAuth; // ці дані ми берем з обєкта, який прилетів, коли юзер верифікувався\n    const createdAt = new Date(); // час коли документ створено\n    try {\n      await userRef.set({\n        // .set() метод відповідає за створення\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n};\n\nfirebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}
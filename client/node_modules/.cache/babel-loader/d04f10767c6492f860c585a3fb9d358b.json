{"ast":null,"code":"// функція як приймає в себе існуючий масив айтемів\n// і новий айтем, який ми збираємося додати\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // записуємо в змінну результат пошуку в масиві\n  // чи айдійшка існуючого айтема співпадає з айдійшою айтема, який ми збираємося додати\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id); // якщо айдішки співпадають (тобто це той самий айтем)\n  // з допомогою функції map() ми створюємо новий масив\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? //цей масив повертає всі айтеми, які в ньому є\n    // а айтеми, айдішки яких збігаються, ще отримують ключ quantity\n    // значення, якого збільшується на один\n    { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  } // якщо айдішки не збігаються, тоді ми вертаємо масив айтемів\n  // додаємо до нього новий айтем, і створюємо йому ключ quantity із значення 1\n\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};","map":{"version":3,"sources":["/Users/Andrew_AJ/Documents/REPO/ReactCourse2021/covercam/src/redux/cart/cartUtils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity"],"mappings":"AAAA;AACA;AAEA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACzD;AACA;AACA,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CACtBC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EADrB,CAAzB,CAHyD,CAMzD;AACA;;AACA,MAAIH,gBAAJ,EAAsB;AACpB,WAAOF,SAAS,CAACM,GAAV,CAAeF,QAAD,IACnBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACI;AACA;AACA;AACA,MAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KAJJ,GAKIH,QANC,CAAP;AAQD,GAjBwD,CAkBzD;AACA;;;AACA,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAE,GAAGC,aAAL;AAAoBM,IAAAA,QAAQ,EAAE;AAA9B,GAAf,CAAP;AACD,CArBM","sourcesContent":["// функція як приймає в себе існуючий масив айтемів\n// і новий айтем, який ми збираємося додати\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  // записуємо в змінну результат пошуку в масиві\n  // чи айдійшка існуючого айтема співпадає з айдійшою айтема, який ми збираємося додати\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToAdd.id\n  );\n  // якщо айдішки співпадають (тобто це той самий айтем)\n  // з допомогою функції map() ми створюємо новий масив\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === cartItemToAdd.id\n        ? //цей масив повертає всі айтеми, які в ньому є\n          // а айтеми, айдішки яких збігаються, ще отримують ключ quantity\n          // значення, якого збільшується на один\n          { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n  // якщо айдішки не збігаються, тоді ми вертаємо масив айтемів\n  // додаємо до нього новий айтем, і створюємо йому ключ quantity із значення 1\n  return [...cartItems, { ...cartItemToAdd, quantity: 1 }];\n};\n"]},"metadata":{},"sourceType":"module"}